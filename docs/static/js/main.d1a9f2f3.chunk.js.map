{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/JournalSearch.js","components/journal/SideBar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/auth/LoadingPage.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","photoURL","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","FacebookAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","Swal","fire","refreshNote","title","deleteNote","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesAppBar","useDispatch","useSelector","className","moment","date","format","style","display","onChange","e","files","text","showConfirmButton","willOpen","showLoading","exec","icon","fileUrl","close","startUploading","class","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","isDenied","startDeleting","setError","err","removeError","starLoading","finishLoading","login","logout","JournalEntry","noteDate","backgroundSize","backgroundImage","length","slice","JournalEntries","JournalSearch","SideBar","signOut","newNote","Date","getTime","add","NothingSelected","JournalScreen","LoginScreen","email","password","isFormValid","onSubmit","preventDefault","signInWithEmailAndPassword","user","catch","message","startLoginEmailPassword","disabled","signInWithPopup","to","RegisterScreen","password2","trim","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterEmailPassword","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PublicRoute","LoadingPage","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d1a9f2f3.chunk.js","sourcesContent":["\n\nexport const types = {\n\n    //Login\n    login: '[auth] login',\n    logout: '[auth] logout',\n\n    //Errores de validacion\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    //Loading for disable button\n    uiStarLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n    \n    //All notes\n    notesAddNew: '[Notes] New Note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = ( state = initialState , action ) => {\n    \n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n            \n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [ action.payload, ...state.notes ]\n            }\n            \n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = ( state = initialState, action) => {\n\n    switch ( action.type ) {\n\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        \n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n\n        case types.uiStarLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n    \n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from \"../types/types\";\n\n\nexport const authReducer = ( state  = {}, action ) => {\n\n    switch ( action.type ) {\n\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName,\n                photoURL: action.payload.photoURL\n            }\n            \n        case types.logout:\n            return {}\n\n        default:\n            return state;\n    }\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBJ3cvjGef4EivtqMhIntTBt0m89EAgENI\",\n    authDomain: \"react-apps-6e8d4.firebaseapp.com\",\n    projectId: \"react-apps-6e8d4\",\n    storageBucket: \"react-apps-6e8d4.appspot.com\",\n    messagingSenderId: \"821382727070\",\n    appId: \"1:821382727070:web:4f9ce98ab00efb9d6d428f\"\n};\n\n  firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n  const facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\n\n  export {\n      db,\n      googleAuthProvider,\n      facebookAuthProvider,\n      firebase\n  }","\n\nexport const fileUpload = async ( file ) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/pruebasreact/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n\n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n        \n    } catch (err) {\n        throw err;\n    }\n\n}","import { db } from '../firebase/firebase-config';\n\n\nexport const loadNotes = async ( uid ) => {\n\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n    const notes = [];\n\n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        });\n    });\n\n    return notes;\n}","import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types';\n\n\nexport const startNewNote = () => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${ uid }/journal/notes`).add(newNote);\n\n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote ) );\n    }\n}\n\nexport const activeNote = ( id, note ) => ({\n\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id, note ) => ({\n    type: types.notesAddNew,\n    payload: {\n        id,\n        ...note\n    }\n})\n\nexport const startLoadNotes = ( uid ) => {\n    return async( dispatch ) => {\n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n    } \n}\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = ( note ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if (!note.url) {\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        try {\n            await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n        } catch( err ) {\n            Swal.fire('Error', err, 'Error');\n        }\n        \n        dispatch( refreshNote( note.id, note) );\n        Swal.fire('Saved', note.title, 'success');\n    }\n}\n\nexport const refreshNote = ( id, note ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUploading = ( file ) => {\n    return async( dispatch, getState ) => {\n\n        const { active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const allowedExtensions = /(.jpg|.jpeg|.png|.gif)$/i;\n\n        if(!allowedExtensions.exec(file.name)){\n\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'the file must be an image (jpg, jpeg, png, gif)'\n              });\n\n        }else {\n\n            const fileUrl = await fileUpload( file );\n            activeNote.url = fileUrl;\n    \n            dispatch( startSaveNote( activeNote ) );\n    \n            Swal.close();\n        }\n    }\n}\n\nexport const startDeleting = ( id ) => {\n    return async( dispatch, getState) => {\n        \n        const { uid } = getState().auth;\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n        Swal.fire({\n            title: 'Do you want to deleted?',\n            showDenyButton: true,\n            showCancelButton: true,\n            confirmButtonText: `Delete`,\n            denyButtonText: `Don't Delete`,\n\n          }).then((result) => {\n            if (result.isConfirmed) {\n\n              Swal.fire('Deleted', '' , 'success')\n              dispatch( deleteNote(id) );\n\n            } else if (result.isDenied) {\n\n              Swal.fire('Not deleted', '', 'info')\n            }\n          })\n    }\n}\n\nexport const deleteNote = ( id ) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning,\n\n});","import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n    //Desestructuracion del event (target)\n    const handleInputChange = ({ target }) => {\n        \n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n    }\n    \n    return [ values, handleInputChange, reset ];\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes)\n\n    const handleSave = () => {\n        \n        dispatch( startSaveNote( active ) );\n    }\n\n    const handlePictureUpload = ( ) => {\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = (e) => {\n\n        const file = e.target.files[0];\n        if ( file ) {\n            dispatch( startUploading( file ) );\n        }\n    }\n\n    \n    return (\n        <div className=\"notes__appbar\">\n            <span> { moment(active.date).format('LL') } </span>\n\n            <input\n                id=\"fileSelector\" \n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={ handleFileChange }\n            />\n\n\n            <div>\n                <i class=\"far fa-images\"></i>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureUpload }\n                >\n                    Picture\n                </button>\n\n                <i class=\"far fa-save\"></i>\n                <button \n                    className=\"btn \"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active:note } = useSelector(state => state.notes);\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { title, body, url, id } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n\n        if ( note.id !== activeId.current ){\n            reset( note );\n            activeId.current = note.id;\n        }\n    }, [note, reset]);\n\n    useEffect(() => {\n\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\n\n    }, [formValues, dispatch]);\n\n    const handleDelete = () => {\n        dispatch( startDeleting( id ) );\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    placeholder=\"Descrition\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                >\n                </textarea>\n\n                {\n                    (url) &&\n                    <div className=\"notes__image\">\n                        <img \n                            src={ url }\n                            alt=\"Imagen\"\n                        />\n                    </div>\n                }\n\n            </div>\n            \n            <button\n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import { types } from \"../types/types\"\n\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const starLoading = () => ({\n    type: types.uiStarLoading\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n});","import Swal from 'sweetalert2';\n\nimport { facebookAuthProvider, firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { noteLogout } from './notes';\nimport { finishLoading, starLoading } from './ui';\n\nexport const startLoginEmailPassword = ( email, password ) => {\n    return (dispatch) => {\n\n        dispatch( starLoading() ); // true\n\n        firebase.auth().signInWithEmailAndPassword( email, password )\n            .then( ( { user } ) => {\n                dispatch( login( user.uid, user.displayName ) );\n                dispatch( finishLoading() ); // false\n            })\n            .catch( e => {\n                //console.log(e);\n                dispatch( finishLoading() ); // false\n                Swal.fire('error', e.message, 'error');\n            })\n    }\n}\n\nexport const startRegisterEmailPassword = ( email, password, name ) => {\n    return (dispatch) => {\n\n        dispatch( starLoading() ); // true\n\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async( { user } ) => {\n\n                await user.updateProfile({ displayName: name});\n                dispatch( login( user.uid, user.displayName ) );\n                dispatch( finishLoading() ); // false\n            })\n            .catch( e => {\n                //console.log(e);\n                dispatch( finishLoading() ); // false\n                Swal.fire('error', e.message, 'error');\n            })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        \n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ( { user } ) => {\n                dispatch( login( user.uid, user.displayName, user.photoURL ) );\n            })\n            .catch( e => {\n                //console.log(e);\n                Swal.fire('error', e.message, 'error');\n            })\n    }\n}\n\nexport const startFacebookLogin = () => {\n    return (dispatch) => {\n        \n        firebase.auth().signInWithPopup( facebookAuthProvider )\n            .then( ( { user } ) => {\n                dispatch( login( user.uid, user.displayName ) );\n            })\n            .catch( e => {\n                //console.log(e);\n                Swal.fire('error', e.message, 'error');\n            })\n    }\n}\n\nexport const login = (uid, displayName, photoURL) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName,\n        photoURL\n    }\n});\n\nexport const startLogout = () => {\n    return async( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n        dispatch( noteLogout() );\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n});\n\n\n// FALTA HACER FUNCIONAR EL FACEBOOK LOGIN Y SI LA PERSONA NO SUBE IMAGEN EN EL DIARIO TENER UNA DEFAULT NO_IMAGE\n// CENTRAR EL NOMBRE Y LA IMAGEN DE GOOGLE LOGIN EN EL NAVBAR\n// HACER LA PAGINA RESPONSIVE ?","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport { activeNote } from '../../actions/notes';\nimport { useDispatch } from 'react-redux';\n\nexport const JournalEntry = ( { id, date, title, body, url } ) => {\n\n    const noteDate = moment( date );\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch( \n            activeNote( id, {\n                date, title, body, url\n            }) \n        );\n    }\n\n\n    return (\n\n        <div \n            className=\"journal__entry pointer animate__animated animate__bounceInLeft\" \n            onClick={ handleEntryClick }\n        >\n\n            {\n                (url) ? \n                    <div \n                        className=\"journal__entry-picture\"\n                        style={{\n                            backgroundSize: 'cover',\n                            backgroundImage: `url( ${ url } )`\n                        }}\n                    >\n\n                    </div>\n                :\n                    <div \n                        className=\"journal__entry-picture\"\n                        style={{\n                            backgroundSize: 'cover',\n                            backgroundImage: 'url(https://res.cloudinary.com/pruebasreact/image/upload/v1612721032/nad6d6wp91peiyd8rdq4.png)'\n                        }}\n                    >\n\n                </div>\n            }\n\n            <div className=\"journal__entry-boby\">\n                <p className=\"journal__entry-title\">\n                    { (title.length > 20) ? `${title.slice(0, 20)}...` : title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { (body.length > 30) ? `${body.slice(0, 30)}...` : body }    \n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd') }</span>\n                <h4>{ noteDate.format('D') }</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__entries\">\n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const JournalSearch = () => {\n    return (\n        <div className=\"journal__sidebar-search mt-5\">\n            <input \n                placeholder=\"Search\" \n                autoComplete=\"off\" \n                type=\"text\" \n            />\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nimport { JournalEntries } from './JournalEntries';\nimport { JournalSearch } from './JournalSearch';\n\n\nexport const SideBar = () => {\n\n\n    const dispatch = useDispatch();\n\n    const { name, photoURL } = useSelector(state => state.auth);\n\n    const { notes } = useSelector(state => state.notes);\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n    \n                    {\n                        ( photoURL ) \n                        ?   \n                            <>\n                                <img className=\"journal__sidebar-google-img\" src={ photoURL } alt={ name }/>\n                                {/* <span>{ name }</span> */}\n                            </> \n                        :   \n                            <>\n                                <i className=\"fas fa-user\"></i>\n                                <span>{ name }</span>\n                            </>\n                    }\n                </h3>\n\n\n                <button \n                    className=\"btn mt-5\"\n                    onClick={ handleLogout }\n                >\n                    <span>Logout</span>\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-3x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n\n            </div>\n\n            {\n                ( notes.length > 5 ) && <JournalSearch />  \n            }\n\n            <JournalEntries />\n\n        </aside>\n    )\n}\n","import React from 'react';\n\nexport const NothingSelected = () => {\n    return (\n\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something,\n                <br />\n                Or create an entry!.\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { SideBar } from './SideBar';\nimport { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\n            <SideBar />\n\n            <main>\n\n                {\n                    ( active )\n                        ? <NoteScreen />\n                        : <NothingSelected />\n                }\n                \n            </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport { setError, removeError } from '../../actions/ui';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { msgError } = useSelector( state => state.ui );\n\n    const { loading } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: 'prueba@gmail.com',\n        password: '123Prueba'\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        if ( isFormValid() ) {\n            dispatch( startLoginEmailPassword( email, password ) );\n        }\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n    // const handleFacebookLogin = () => {\n    //     dispatch( startFacebookLogin() );\n    // }\n\n    const isFormValid = () => {\n\n        if ( email.length === 0 ) {\n            dispatch( setError('Error: Email is required') );\n            return false;\n\n        } else if ( password.length === 0 ) {\n            dispatch( setError('Error: Password is required') );\n            return false;\n\n        }\n        dispatch( removeError() );\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Sign In</h3>\n\n            <form onSubmit={ handleLogin }>\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            { msgError } \n                        </div>\n                    )\n\n                }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value = { email }\n                    onChange= { handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input mt-1\"\n                    value = { password }\n                    onChange= { handleInputChange }                \n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Sign In\n                </button>\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n\n                    {/* <div \n                        className=\"facebook-btn\"\n                        onClick={ handleFacebookLogin }\n                    >\n                        <div className=\"facebook-icon-wrapper\">\n                            <img className=\"facebook-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/c2/F_icon.svg\" alt=\"facebook button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with Facebook</b>\n                        </p>\n                    </div> */}\n\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useForm } from '../../hooks/useForm';\nimport { setError, removeError } from '../../actions/ui';\nimport { startRegisterEmailPassword } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { msgError } = useSelector( state => state.ui );\n\n    const { loading } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( isFormValid() ){\n            dispatch( startRegisterEmailPassword( email, password, name ) );\n        }\n        \n    }\n\n    const isFormValid = () => {\n\n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Error: Name is required') );\n            return false;\n\n        } else if ( !validator.isEmail( email ) ) {\n            dispatch( setError('Error: Email is not valid') );\n            return false;\n\n        } else if ( password !== password2 || password.length < 6 ) {\n            dispatch( setError('Error: Password tiene que ser igual y tener mas de 5 caracteres') );\n            return false;\n        }\n\n        dispatch( removeError() );\n        return true;\n    }\n\n    return (\n    \n        <>\n            <h3 className=\"auth__title\">Sign Up</h3>\n\n            <form onSubmit={ handleRegister }>\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            { msgError } \n                        </div>\n                    )\n\n                }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input mt-1\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input mt-1\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    className=\"auth__input mt-1\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5 mt-1\"\n                    disabled ={ loading }\n                >\n                    Sign Up\n                </button>\n                \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Alredy registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container animate__animated animate__fadeIn\">\n                <Switch>\n                    <Route\n                        exact \n                        path=\"/auth/login\" \n                        component={ LoginScreen } \n                    />\n\n                    <Route\n                        exact \n                        path=\"/auth/register\" \n                        component={ RegisterScreen } \n                    />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div> \n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated)\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\n\nexport const LoadingPage = () => {\n    return (\n        <div className=\"auth__loading-page\">\n            \n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nimport { firebase } from '../firebase/firebase-config';\n\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadNotes } from '../actions/notes';\nimport { LoadingPage } from '../components/auth/LoadingPage';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n    //para mantener el uid, onAuth.. es un observador que estara pendiente si esta autenticado\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged( ( user ) => {\n\n            //Si el obj user tiene algo? pregunta si existe el uid\n            if ( user?.uid ){\n                dispatch( login( user.uid, user.displayName, user.photoURL ) );\n                setIsLoggedIn( true );\n\n                dispatch( startLoadNotes( user.uid ) );\n            } else {\n                setIsLoggedIn( false );\n            }\n\n            setChecking( false );\n\n        })\n    }, [ dispatch, setChecking, setIsLoggedIn ])\n\n    if ( checking ) {\n        return (\n            //<h1> Wait...</h1> //Hacer comoponente de loading\n            <LoadingPage />\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        isAuthenticated ={ isLoggedIn }\n                        path=\"/auth\"\n                        component={ AuthRouter }\n                    />\n\n                    <PrivateRoute\n                        exact\n                        isAuthenticated ={ isLoggedIn }\n                        path=\"/\"\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n        </Router>\n        \n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n        \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}